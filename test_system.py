#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã CM4
"""

import time
import sys
from lcd_game import LCDGame
from boot_splash import BootSplash
from desktop import Desktop

def test_lcd():
    """–¢–µ—Å—Ç LCD –¥–∏—Å–ø–ª–µ—è"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LCD –¥–∏—Å–ø–ª–µ—è...")
    try:
        lcd = LCDGame()
        print("‚úì LCD –¥–∏—Å–ø–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏
        lcd.clear()
        lcd.update()
        print("‚úì –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞")
        
        # –¢–µ—Å—Ç –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞
        lcd.draw_text("LCD Test", 10, 10, color=(255, 255, 255))
        lcd.update()
        print("‚úì –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞")
        
        # –¢–µ—Å—Ç –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ñ–∏–≥—É—Ä
        lcd.draw_rect(50, 50, 100, 50, color=(255, 0, 0), fill=True)
        lcd.draw_circle(150, 150, 30, color=(0, 255, 0), fill=True)
        lcd.update()
        print("‚úì –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ñ–∏–≥—É—Ä")
        
        time.sleep(2)
        lcd.cleanup()
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ LCD: {e}")
        return False

def test_buttons():
    """–¢–µ—Å—Ç –∫–Ω–æ–ø–æ–∫"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫...")
    try:
        lcd = LCDGame()
        
        # –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞
        lcd.clear()
        lcd.draw_text("Button Test", 10, 10, color=(255, 255, 255))
        lcd.draw_text("Press any button", 10, 30, color=(200, 200, 200))
        lcd.update()
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        start_time = time.time()
        while time.time() - start_time < 10:  # 10 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Ç–µ—Å—Ç
            for button_name in ['A', 'B', 'UP', 'DOWN', 'LEFT', 'RIGHT', 'START', 'SELECT']:
                if lcd.buttons.is_pressed(button_name):
                    print(f"‚úì –ö–Ω–æ–ø–∫–∞ {button_name} —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    lcd.draw_text(f"Pressed: {button_name}", 10, 60, color=(0, 255, 0))
                    lcd.update()
                    time.sleep(0.5)
            
            time.sleep(0.1)
        
        lcd.cleanup()
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –∫–Ω–æ–ø–æ–∫: {e}")
        return False

def test_splash():
    """–¢–µ—Å—Ç –∑–∞—Å—Ç–∞–≤–∫–∏"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—Å—Ç–∞–≤–∫–∏...")
    try:
        lcd = LCDGame()
        splash = BootSplash(lcd)
        
        # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞—Å—Ç–∞–≤–∫–∏
        splash.show_logo_animation()
        time.sleep(1)
        
        splash.show_text_animation()
        time.sleep(1)
        
        splash.show_loading_animation()
        time.sleep(1)
        
        print("‚úì –ó–∞—Å—Ç–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        lcd.cleanup()
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –∑–∞—Å—Ç–∞–≤–∫–∏: {e}")
        return False

def test_desktop():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞"""
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞...")
    try:
        lcd = LCDGame()
        desktop = Desktop(lcd)
        
        # –¢–µ—Å—Ç –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
        desktop.draw_main_screen()
        lcd.update()
        print("‚úì –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç –¥—Ä—É–≥–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
        desktop.draw_system_info_screen()
        lcd.update()
        print("‚úì –≠–∫—Ä–∞–Ω —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        
        desktop.draw_games_screen()
        lcd.update()
        print("‚úì –≠–∫—Ä–∞–Ω –∏–≥—Ä")
        
        time.sleep(2)
        lcd.cleanup()
        return True
        
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 50)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã SHIWA NETWORK Grand Mini")
    print("=" * 50)
    
    tests = [
        ("LCD –¥–∏—Å–ø–ª–µ–π", test_lcd),
        ("–ö–Ω–æ–ø–∫–∏", test_buttons),
        ("–ó–∞—Å—Ç–∞–≤–∫–∞", test_splash),
        ("–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª", test_desktop)
    ]
    
    results = []
    
    for test_name, test_func in tests:
        print(f"\n--- –¢–µ—Å—Ç: {test_name} ---")
        try:
            result = test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"‚úó –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ {test_name}: {e}")
            results.append((test_name, False))
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "=" * 50)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    passed = 0
    for test_name, result in results:
        status = "‚úì –ü–†–û–ô–î–ï–ù" if result else "‚úó –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name}: {status}")
        if result:
            passed += 1
    
    print(f"\n–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {len(results)}")
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ: {passed}")
    print(f"–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {len(results) - passed}")
    
    if passed == len(results):
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("sudo python3 main.py")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
    
    return passed == len(results)

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)