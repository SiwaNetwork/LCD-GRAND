#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ LCD –¥–∏—Å–ø–ª–µ–µ
–°–æ–∑–¥–∞–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
"""

import time
from PIL import Image, ImageDraw, ImageFont
from lcd_game import LCDGame
from config import COLORS

def create_test_image():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 240x240
    img = Image.new('RGB', (240, 240), color=COLORS['BLACK'])
    draw = ImageDraw.Draw(img)

    # –†–∏—Å—É–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
    for y in range(240):
        r = int(255 * y / 240)
        g = int(128 * (240 - y) / 240)
        b = int(255 * y / 240)
        draw.line([(0, y), (240, y)], fill=(r, g, b))

    # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
    try:
        font_large = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 24)
        font_medium = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 16)
    except:
        font_large = ImageFont.load_default()
        font_medium = ImageFont.load_default()

    # –¢–µ–∫—Å—Ç –≤ —Ü–µ–Ω—Ç—Ä–µ
    draw.text((20, 50), "IMAGE TEST", fill=COLORS['WHITE'], font=font_large)
    draw.text((30, 90), "Raspberry Pi CM4", fill=COLORS['GREEN'], font=font_medium)
    draw.text((50, 120), "LCD Display", fill=COLORS['BLUE'], font=font_medium)

    # –†–∏—Å—É–µ–º –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã
    draw.rectangle([20, 150, 100, 190], fill=COLORS['RED'], outline=COLORS['WHITE'])
    draw.ellipse([140, 160, 200, 220], fill=COLORS['YELLOW'], outline=COLORS['BLACK'])

    # –†–∏—Å—É–µ–º —Å–µ—Ç–∫—É
    for i in range(0, 241, 20):
        draw.line([(i, 0), (i, 240)], fill=COLORS['GRAY'], width=1)
        draw.line([(0, i), (240, i)], fill=COLORS['GRAY'], width=1)

    return img

def display_image_test():
    """–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    try:
        print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")

        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        test_image = create_test_image()
        print("‚úì –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")

        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LCD –¥–∏—Å–ø–ª–µ—è...")
        lcd = LCDGame()
        print("‚úì LCD –¥–∏—Å–ø–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        print("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –¥–∏—Å–ø–ª–µ—è
        lcd.set_buffer(test_image)

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∏—Å–ø–ª–µ–π
        lcd.update()
        print("‚úì –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ")

        print("\nüéâ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ!")
        print("–ù–∞ —ç–∫—Ä–∞–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∏–¥–Ω–æ:")
        print("- –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω")
        print("- –¢–µ–∫—Å—Ç 'IMAGE TEST'")
        print("- –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã")
        print("- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è —Å–µ—Ç–∫–∞")

        # –ê–Ω–∏–º–∞—Ü–∏—è - –º–∏–≥–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π
        print("\n–¢–µ—Å—Ç –ø–æ–¥—Å–≤–µ—Ç–∫–∏...")
        for i in range(3):
            time.sleep(1)
            lcd.set_backlight(False)
            time.sleep(0.5)
            lcd.set_backlight(True)

        print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

    except KeyboardInterrupt:
        print("\n–¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. –î–∏—Å–ø–ª–µ–π –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        print("2. SPI –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ raspi-config")
        print("3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ GPIO")
        print("4. –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    finally:
        try:
            if 'lcd' in locals():
                print("–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...")
                lcd.cleanup()
                print("‚úì –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")
        except:
            pass

if __name__ == "__main__":
    print("=" * 50)
    print("–¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø")
    print("–î–ª—è Raspberry Pi CM4 —Å LCD –¥–∏—Å–ø–ª–µ–µ–º")
    print("=" * 50)
    display_image_test()
